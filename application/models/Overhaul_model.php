<?php
/* 
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */
 
class Overhaul_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /*
     * Get lm_overhaul by id
     */
    function get_overhaul($id)
    {
        return $this->db->get_where('overhaul',array('id'=>$id))->row_array();
    }
    
    /*
     * Get all lm_overhaul
     */
    function get_all_overhaul()
    {
        return $this->db->get('overhaul')->result_array();
    }
    
    /*
     * function to add new lm_overhaul
     */
    function add_overhaul($params)
    {
        $this->db->insert('overhaul',$params);
        return $this->db->insert_id();
    }
    
    /*
     * function to update lm_overhaul
     */
    function update_overhaul($id,$params)
    {
        $this->db->where('id',$id);
        $response = $this->db->update('overhaul',$params);
        if($response)
        {
            return "lm_overhaul updated successfully";
        }
        else
        {
            return "Error occuring while updating lm_overhaul";
        }
    }
    
    /*
     * function to delete lm_overhaul
     */
    function delete_overhaul($id)
    {
        $response = $this->db->delete('overhaul',array('id'=>$id));
        if($response)
        {
            return "lm_overhaul deleted successfully";
        }
        else
        {
            return "Error occuring while deleting lm_overhaul";
        }
    }



    public function record_query($search,$limit,$page=0)
    {
       
        $this->build_fields($search);
        $this->db->limit($limit,$page);
        $query = $this->db->get();
        return $query->result_array();
    }

    public function record_count($search)
    {
        $this->build_fields($search);
        $query = $this->db->get();
        return $query->num_rows();
    }

    public function build_fields($fields)
    {
        $this->db->select("admin.id admin_id,admin.name admin_name,admin.displayname admin_display,
            escalator.id escalator_id,escalator.lid escalator_lid,escalator.location escalator_location,
            elevator.id elevator_id,elevator.lid elevator_lid,elevator.location elevator_location,
            overhaul.*");
        $this->db->from('overhaul');
        $this->db->join('escalator',"overhaul.lid=escalator.lid",'left');
        $this->db->join('elevator',"overhaul.lid=elevator.lid",'left');
        $this->db->join('admin',"overhaul.submitor=admin.id");

        if(!empty($fields['lid'])){
            $lid = $fields['lid'];
            $this->db->group_start();
            $this->db->where("escalator.lid",$lid);
            $this->db->or_where("elevator.lid",$lid);
            $this->db->group_end();
        }

        if(!empty($fields['location'])){
            $location = $fields['location'];
            $this->db->group_start();
            $this->db->like("escalator.location",$location);
            $this->db->or_like("elevator.location",$location);
            $this->db->group_end();
        }

        if(!empty($fields['supportor'])){
            $supportor = $fields['supportor'];
            $this->db->like("overhaul.supportor",$supportor);
        }

        if(!empty($fields['preparer'])){
            $preparer = $fields['preparer'];
            $this->db->like("overhaul.preparer",$preparer);
        }

        $this->db->order_by('overhaul.id','desc');


    }
}
